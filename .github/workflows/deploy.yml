name: bot.ci
on:
  push:
    branches:
      - master
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'
      - name: build
        run: dotnet publish -c Release
      - name: archive artifacts
        run: |
          tar -cvf rebootinbot.telegram.tar -C RebootInBot.Telegram ./bin/Release/netcoreapp3.1/publish Dockerfile
          tar -cvf rebootinbot.unittests.tar -C RebootInBot.UnitTests/bin/Release/netcoreapp3.1/publish .
          tar -cvf rebootinbot.intergationtests.tar -C RebootInBot.IntegrationTests/bin/Release/netcoreapp3.1/publish .
      - name: upload bot
        uses: actions/upload-artifact@v2
        with:
          name: bot
          path: rebootinbot.telegram.tar
      - name: upload unit tests
        uses: actions/upload-artifact@v2
        with:
          name: unit-tests
          path: rebootinbot.unittests.tar
      - name: upload integration tests
        uses: actions/upload-artifact@v2
        with:
          name: integration-tests
          path: rebootinbot.intergationtests.tar
  unit-test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: download tests
        uses: actions/download-artifact@v2
        with:
          name: unit-tests
      - name: unpack
        run: tar -xvf rebootinbot.unittests.tar ./
      - name: run tests
        run: dotnet test RebootInBot.UnitTests.dll 
  integration-test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: download tests
        uses: actions/download-artifact@v2
        with:
          name: integration-tests
      - name: unpack
        run: tar -xvf rebootinbot.intergationtests.tar -C ./
      - name: run tests
        run: dotnet test RebootInBot.IntegrationTests.dll
  deploy:
    needs: [unit-test, integration-test]
    runs-on: ubuntu-latest
    steps:
      - name: download bot
        uses: actions/download-artifact@v2
        with:
          name: bot
      - name: unpack
        run: tar -xvf rebootinbot.telegram.tar -C ./
      - name: build docker image
        run: docker build -t rebootinbot.telegram:v1.0.${{ github.run_number }} -f Dockerfile . 
      - name: save image
        run: docker image save -o rebootinbot.telegram.image.tar rebootinbot.telegram:v1.0.${{ github.run_number }}
      - name: remove old image
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSHKEY }}
          script: rm /home/shumantt/rebootinbot/*
      - name: copy image to vm
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSHKEY }}
          source: rebootinbot.telegram.image.tar
          target: /home/shumantt/rebootinbot/
      - name: load and start docker
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSHKEY }}
          script: |
            docker load -i /home/shumantt/rebootinbot/rebootinbot.telegram.image.tar
            docker tag rebootinbot.telegram:latest rebootinbot.telegram:v1.0.${{ github.run_number }}
            docker image rm rebootinbot.telegram:latest
            docker stop rebootinbot.telegram
            docker run -d --rm --name rebootinbot.telegram -e TOKEN=${{ secrets.BOT_TOKEN }} rebootinbot.telegram:v1.0.${{ github.run_number }}
            docker image prune -af